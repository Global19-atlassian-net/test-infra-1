#!/usr/bin/env bash
# Copyright 2016 The Kubernetes Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

set -o errexit
set -o nounset
set -o pipefail
set -x

# Check if the job has opted-in to docker-in-docker availability.
export DOCKER_IN_DOCKER_ENABLED=${DOCKER_IN_DOCKER_ENABLED:-false}
if [ "$DOCKER_IN_DOCKER_ENABLED" == "true" ]; then
    # If we have opted in to docker in docker, start the docker daemon,
    # and wait a second for it to be fully up.
    echo "Starting docker..." && service docker start && sleep 1
    # begin cleaning up after any previous runs
    echo "Starting to clean up docker graph."
    # make sure any lingering containers are removed from the data root
    docker stop $(docker ps -aq) || true
    docker rm $(docker ps -aq) || true
    # cleanup kube-build images from kubernetes' dockerized builds
    docker rmi -f $(docker images -q kube-build) || true
    # then cleanup images and volumes not associated with tagged images
    docker rmi -f $(docker images --filter dangling=true -qa) || true
    docker volume prune -f || true
    # list what images and volumes remain
    echo "Remaining docker images and volumes are:"
    docker images --all
    docker volume ls
    echo "Done setting up docker in docker."
else
# If not, make sure `docker` points to the old one compatible with our Jenkins
    export PATH=/docker-no-dind-bin/:$PATH
fi

# Clone test-infra and start bootstrap
git clone https://github.com/kubernetes/test-infra
./test-infra/jenkins/bootstrap.py \
    --job=${JOB_NAME} \
    --service-account=${GOOGLE_APPLICATION_CREDENTIALS} \
    --upload='gs://kubernetes-jenkins/logs' \
    "$@"

